/* <%= baseClass %> v 1.0.0-6  */


// To import into your build system, @include dist/assets/<%= baseClass %>font
// The following 3 mixins are availabe to you
//    @mixin print-<%= baseClass %>-font-face()
//      This mixin prints the @font-face with relative paths of "../fonts/"
//    @mixin print-<%= baseClass %>-classes()
//      This mixin prints all of the CSS classes needed to apply icons with class names
//    @mixin print-<%= baseClass %>-all()
//      This mixin prints both of the previous mixins


@mixin _<%= baseClass %>-styles {
    font-family: '<%= fontFamilyName %>';
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

// Sass mixins to print CSS classes and font-face for icon font


@mixin print-<%= baseClass %>-classes() {

    // extend HTML class for icon base
    .<%= baseClass %>:before,
    [class$="<%= baseClass %>"]:before,
    [class*="<%= baseClass %>"]:before,
    [class^="<%= baseClass %>"]:before,
    {
       @include _<%= baseClass %>-styles;
    }

    @each $glyph, $data in $<%= baseClass %>-glyphmap {
        .#{$glyph}:before {
            content: map-get($data, location);
        }
    }
}

@mixin print-<%= baseClass %>-font-face($path_to_dist: '../') {
    @font-face {
      font-family: '<%= fontFamilyName %>';
      src: url("#{$path_to_dist}<%= pathFromDist %>.eot");
      src: url("#{$path_to_dist}<%= pathFromDist %>.eot?#iefix") format("embedded-opentype"),
           url("#{$path_to_dist}<%= pathFromDist %>.woff") format("woff"),
           url("#{$path_to_dist}<%= pathFromDist %>.ttf") format("truetype");
      font-weight: normal;
      font-style: normal;
    }
}

// Combo Mixin to print above 2

@mixin print-<%= baseClass %>-all($path_to_dist: '../') {
    @include print-<%= baseClass %>-font-face($path_to_dist);
    @include print-<%= baseClass %>-classes();
}


// Mixin for applying an icon to the before or after pseudo element of your selector

@mixin get-<%= baseClass %>($name, $position: 'before') {
   &:#{$position} {
        content: map-get(map-get($<%= baseClass %>-glyphmap, <%= baseClass %>-#{$name}), location);
        @include _<%= baseClass %>-styles;
        @content;
    }
}






$<%= baseClass %>-glyphmap:(  <% for (var glyphIdx = 0; glyphIdx < glyphs.length; glyphIdx++) { %>
  <%= glyphs[glyphIdx] %>: ('location': "\<%= codepoints[glyphIdx] %>"),

  <% } %>
);





